name: 'Get GitHub Token'

description: 'Gets a github cert from AWS Secret Manager and extracts a PAT token and sets GH_ACTION'

inputs:
  role_to_assume:
    description: The IAM role to assume for fetching Secrets
    required: true
  app_id:
    description: GitHub app ID
    required: true
  private_key_id:
    description: Secret for GitHub App
    required: true
  aws_region:
    description: AWS Region
    default: eu-west-2
  username:
    description: Git User
    required: false
  email:
    description: Git Email
    required: false

runs:
  using: "composite"
  steps:
    # Setup exectuion for AWS
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ inputs.aws_region }}
        role-to-assume: ${{ inputs.role_to_assume }}
    - run: aws sts get-caller-identity
      shell: bash

    # Get the private git
    - name: Get Github app private key from ASM
      uses: aws-actions/aws-secretsmanager-get-secrets@v1
      with:
        secret-ids: |
          PRIVATE_KEY, ${{ inputs.private_key_id }}

    # Github auth using Github App - environment variables are set by previous step action
    - name: Get token
      id: get-token
      uses: getsentry/action-github-app-token@v3
      with:
        app_id: ${{ inputs.app_id }}
        private_key: ${{ env.PRIVATE_KEY }}

    # Set the GH_TOKEN environment variable, replacing the default token
    - name: export token
      shell: bash
      env:
        TOKEN: ${{ steps.get-token.outputs.token }}
      run: |
        echo "GH_TOKEN=$TOKEN" >> $GITHUB_ENV
        
    # Set the git user and email if provided
    - name: Set Git Username and Email
      shell: bash
      env:
        USERNAME: ${{ inputs.username }}
        EMAIL: ${{ inputs.email }}
      run: |
        if [ -d ".git" ]; then
          git config --local --remove-section http."https://github.com/"
          git config -l --local
        else
          echo '!! No git repo found! You must run "git config --local --remove-section http."https://github.com/" after you check out in order to push using this token'
        fi
        git config --global url."https://x-access-token:${{ steps.cdp-gh-action.outputs.token }}@github.com".insteadOf "https://github.com"
        if [ -n "$USERNAME" ]; then
          git config --global user.name $USERNAME
        fi
        if [ -n "$EMAIL" ]; then
          git config --global user.email $USERNAME
        fi
        git config -l
        pwd
        ls

      
